name: Build Debian Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub Release'
        required: true
        default: false
        type: boolean

# Add these permission settings
permissions:
  contents: write
  packages: write

jobs:
  build-deb:
    runs-on: ubuntu-latest
    container: ubuntu:20.04

    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y \
            devscripts \
            debhelper \
            dh-python \
            python3-all \
            python3-setuptools \
            python3-pyqt5 \
            python3-pyqt5.qtwebengine \
            python3-feedparser \
            git \
            build-essential

      - name: Create debian directory link
        run: |
          rm -rf debian
          ln -s packaging/debian debian

      - name: Update changelog date
        run: |
          sed -i "s/\$(LC_ALL=C date -R)/$(LC_ALL=C date -R)/" debian/changelog

      - name: Build package
        run: |
          dpkg-buildpackage -us -uc -b -d
          mkdir -p artifacts
          mv ../*.deb artifacts/

      - name: List built packages
        run: ls -l artifacts/*.deb

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debian-packages
          path: artifacts/*.deb

  release:
    needs: build-deb
    if: startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && inputs.create_release)
    runs-on: ubuntu-latest
    
    steps:
      - name: Download DEB package
        uses: actions/download-artifact@v4
        with:
          name: debian-packages
          path: ./artifacts

      - name: Get package filename
        id: get_filename
        run: echo "deb_file=$(ls artifacts/*.deb)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload DEB to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_filename.outputs.deb_file }}
          asset_name: ${{ steps.get_filename.outputs.deb_file }}
          asset_content_type: application/vnd.debian.binary-package 