name: Build Packages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential debhelper devscripts python3-setuptools python3-all dh-python
          python -m pip install --upgrade pip
          pip install build

      - name: Build source distribution
        run: |
          python -m build --sdist
          
      - name: Build DEB package
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          else
            VERSION="0.0.0"
          fi
          cd packaging/debian
          ./build.sh "$VERSION"
          cd ../..
          
      - name: Create RPM package structure
        run: |
          mkdir -p .rpmpkg/usr/bin
          # Copy the built files to RPM structure
          # TODO: Add proper file copying based on your application structure

      - name: Build RPM package
        uses: jiro4989/build-rpm-action@v2
        with:
          summary: 'Modern text editor for journalists and writers'
          package: jottr
          package_root: .rpmpkg
          maintainer: 'mFat <newmfat@gmail.com>'
          version: ${{ github.ref_type == 'tag' && github.ref_name || '0.0.0' }}
          arch: 'x86_64'
          desc: 'Modern text editor for journalists and writers'
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            packaging/debian/*.deb
            *.rpm

  create-release:
    needs: [build-packages]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            packages/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 